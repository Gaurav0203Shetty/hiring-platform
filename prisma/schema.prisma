// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  name         String?
  password     String
  role         Role
  skills       String? // Candidate's skills as a comma-separated string
  jobs         Job[]         @relation("UserJobs") // Jobs posted by recruiter
  applications Application[] @relation("CandidateApplications") // Applications as candidate
}

model Job {
  id             String        @id @default(uuid())
  title          String
  description    String
  requiredSkills String // Comma-separated list of required skills
  recruiterId    String
  recruiter      User          @relation(fields: [recruiterId], references: [id], name: "UserJobs")
  createdAt      DateTime      @default(now())
  applications   Application[] @relation("JobApplications") // Applications to this job
}

model Application {
  id          String   @id @default(uuid())
  jobId       String
  candidateId String
  createdAt   DateTime @default(now())

  job       Job  @relation(fields: [jobId], references: [id], name: "JobApplications")
  candidate User @relation(fields: [candidateId], references: [id], name: "CandidateApplications")
}

enum Role {
  CANDIDATE
  RECRUITER
}
